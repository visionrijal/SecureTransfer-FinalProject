# Application
app.name=${APP_NAME:Secure File Transfer}
app.version=${APP_VERSION:1.0.0}

# Database Configuration
spring.datasource.url=${DB_URL:jdbc:h2:file:./data/securetransfer;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE;DB_CLOSE_DELAY=-1;FILE_LOCK=NO}
spring.datasource.driverClassName=${DB_DRIVER:org.h2.Driver}
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:password}
spring.jpa.database-platform=${DB_DIALECT:org.hibernate.dialect.H2Dialect}

# JPA Configuration
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:true}

# SQL Initialization
spring.sql.init.mode=${SQL_INIT_MODE:always}
spring.sql.init.schema-locations=${SQL_SCHEMA_LOCATION:classpath:schema.sql}

# H2 Console Configuration
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}
spring.h2.console.path=${H2_CONSOLE_PATH:/h2-console}
spring.h2.console.settings.web-allow-others=${H2_WEB_ALLOW_OTHERS:true}

# Server Configuration
# HTTP server port (can be overridden with --server.port=8081)
server.port=8080
server.error.include-message=${SERVER_ERROR_INCLUDE_MESSAGE:always}
server.error.include-binding-errors=${SERVER_ERROR_INCLUDE_BINDING_ERRORS:always}

# Logging Configuration
logging.level.org.springframework.security=${LOGGING_LEVEL_SPRING_SECURITY:DEBUG}
logging.level.com.securetransfer=${LOGGING_LEVEL_APP:DEBUG}
logging.level.org.hibernate.SQL=${LOGGING_LEVEL_HIBERNATE_SQL:DEBUG}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${LOGGING_LEVEL_HIBERNATE_BINDER:TRACE}
logging.file.name=${LOGGING_FILE_NAME:logs/app.log}
logging.pattern.file=${LOGGING_PATTERN_FILE:%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n}

# Network
network.port.range.start=${NETWORK_PORT_RANGE_START:8080}
network.port.range.end=${NETWORK_PORT_RANGE_END:8090}
network.timeout.connection=${NETWORK_TIMEOUT_CONNECTION:30000}
network.timeout.transfer=${NETWORK_TIMEOUT_TRANSFER:300000}

# Security Configuration
app.encryption.key=${ENCRYPTION_KEY:PJklZKduQwublHSS2X8/aF+0XTc33+kPmOgcjg5fL9k=}

# File Transfer
transfer.max-file-size=${TRANSFER_MAX_FILE_SIZE:1073741824}
transfer.chunk-size=${TRANSFER_CHUNK_SIZE:1048576}
transfer.temp-dir=${TRANSFER_TEMP_DIR:./temp}

# Encryption Configuration
app.encryption.algorithm=${ENCRYPTION_ALGORITHM:AES}

# File Upload Configuration
spring.servlet.multipart.max-file-size=${MULTIPART_MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MULTIPART_MAX_REQUEST_SIZE:10MB} 

# WebSocket SSL Configuration
websocket.ssl.enabled=${WEBSOCKET_SSL_ENABLED:true}
websocket.ssl.keystore.path=${WEBSOCKET_SSL_KEYSTORE_PATH}
websocket.ssl.keystore.password=${WEBSOCKET_SSL_KEYSTORE_PASSWORD}
websocket.ssl.keystore.type=${WEBSOCKET_SSL_KEYSTORE_TYPE:PKCS12}
# WebSocket server port (can be overridden with --websocket.port=8445)
websocket.port=8445 

# P2P Configuration
p2p.enabled=${P2P_ENABLED:true}
p2p.upnp.enabled=${P2P_UPNP_ENABLED:true}
p2p.stun.enabled=${P2P_STUN_ENABLED:true}
p2p.connection.timeout=${P2P_CONNECTION_TIMEOUT:15000}
p2p.listen.port=${P2P_LISTEN_PORT:8444}
p2p.upnp.description=${P2P_UPNP_DESCRIPTION:Secure Transfer P2P Connection}
p2p.upnp.lease.duration=${P2P_UPNP_LEASE_DURATION:0}
p2p.ice.preferred.port=${P2P_ICE_PREFERRED_PORT:5000}
p2p.ice.min.port=${P2P_ICE_MIN_PORT:5000}
p2p.ice.max.port=${P2P_ICE_MAX_PORT:5100}



